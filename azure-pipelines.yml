pr:
  branches:
    include:
    - main

pool:
  name: Default
  demands: 
  - agent.name -equals razno
stages:
- stage: Build
  jobs:
    - job: BuildAndDeploy
      steps:
      - checkout: self  
      
      - task: NodeTool@0
        inputs:
          versionSpec: '>=6.10.0'
        displayName: 'Install Node.js'
      
      - script: npm install
        displayName: 'Install dependencies for MainSite'
        workingDirectory: '$(Pipeline.Workspace)/s/MainSite'
        
      - script: echo 'Running unit tests on MainSite'
        displayName: 'Run tests'
        workingDirectory: '$(Pipeline.Workspace)/s/MainSite'

      - script: npm run build
        displayName: 'Build MainSite project'
        workingDirectory: '$(Pipeline.Workspace)/s/MainSite'
        

      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(Pipeline.Workspace)/s/MainSite/dist'
          includeRootFolder: false
          archiveType: 'tar'
          archiveFile: '$(Pipeline.Workspace)/s/MainSite/MainSiteBuildOutput.tar.gz'
          replaceExistingArchive: true

      - task: UniversalPackages@0
        inputs:
          command: 'publish'
          publishDirectory: '$(Pipeline.Workspace)/s/MainSite/'
          vstsFeedPublish: 'ReactProject/frontend'
          vstsFeedPackagePublish: 'mainsitepackage'
          packagePublishDescription: 'Build output of MainSite'

      - script: npm install
        displayName: 'Install dependencies for reporting_host_mf'
        workingDirectory: '$(Pipeline.Workspace)/s/reporting_host_mf'
      
      - script: npm run build
        displayName: 'Build reporting_host_mf'
        workingDirectory: '$(Pipeline.Workspace)/s/reporting_host_mf'
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(Pipeline.Workspace)/s/reporting_host_mf'
          includeRootFolder: true
          archiveType: 'tar'
          archiveFile: '$(Pipeline.Workspace)/s/reporting_host_mf/ReportingSite.tar.gz'
          replaceExistingArchive: true

      - task: UniversalPackages@0
        inputs:
          command: publish
          publishDirectory: '$(Pipeline.Workspace)/s/reporting_host_mf/'
          vstsFeedPublish: 'ReactProject/frontend'
          vstsFeedPackagePublish: 'reportingsite'
          packagePublishDescription: 'Build output of reporting site'
        
- stage: Dockerization
  dependsOn: 'Build'
  condition: succeeded('Build')
  jobs:
    - job: BuildImages
      steps:
      - task: Docker@2
        inputs:
          containerRegistry: 'Docker hub'
          repository: 'plenkyy/microfrontend-service1'
          command: 'buildAndPush'
          Dockerfile: '$(Pipeline.Workspace)/s/MainSite/Dockerfile'

      - script: docker system prune -a -f
        displayName: 'Deleting unused data'
      - task: Docker@2
        inputs:
          containerRegistry: 'Docker hub'
          repository: 'plenkyy/microfrontend-service2'
          command: 'buildAndPush'
          Dockerfile: '$(Pipeline.Workspace)/s/reporting_host_mf/Dockerfile'
      - script: docker image prune -a -f
        displayName: 'Deleting unused data'      

